#!/usr/bin/python
#
# Created by Aaron Beckett January, 2016
#

import sys

from ctip_utils import CTIPError
import ctip_commands as ctip

helpText = """
./ctip <command> <args>

COMMANDS:

    run:    ./ctip run [-o <out_dir>] <config_table_name>
                            OR
            ./ctip run [-o <out_dir>] -f <config_file>

    gen:    ./ctip gen <gen_config_file>

    tables: ./ctip tables

    list:   ./ctip list <table_name>

    save:   ./ctip save [-o <out_dir>] <table_name>

    check:

config_table_name
    Name of the configuration table in the data base that stores
    the configuration to be run by this script.

-f, --config-file
    Name of a csv file with configurations to run. The configurations
    from this file will be used to fill a new sqlite table with the
    config table name.

-g, --generate
    If this option is present along with the -f option, the csv file is
    assumed to contain each possible value for each config option
    and the generated table of configurations will have all possible
    combinations of these options.

-o, --outdir
    Directory in which to place output files.
"""

def main(argv):
    try:
        command = argv[1]

        if command == "run":
            ctip.run(argv[2:])
        elif command == "gen":
            ctip.gen(argv[2:])
        elif command == "tables":
            ctip.tables(argv[2:])
        elif command == "list":
            ctip.list(argv[2:])
        elif command == "save":
            ctip.save(argv[2:])
        elif command == "check":
            ctip.check(argv[2:])
        else:
            raise CTIPError("No CTIP command named '" + command + "'.")

    except IndexError, RuntimeError:
        print helpText
        sys.exit(2)

    except CTIPError as e:
        print e.msg
        
if __name__ == "__main__":
    main(sys.argv)

