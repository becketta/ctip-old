#!/usr/bin/python
#
# Created by Aaron Beckett January, 2016
#

import sys

from ctip_utils import CTIPError
import ctip_commands as ctip

helpText = """
./ctip <command> <args>

COMMANDS:

    *run:    ./ctip run [-o <out_dir>] [-q <qsub_template>] <config_table_name> ["<sql_where_clause>"]
                            OR
            ./ctip run [-o <out_dir>] [-q <qsub_template>] -f <config_file> ["<sql_where_clause>"]

    gen:    ./ctip gen <gen_config_file>

    tables: ./ctip tables

    *list:   ./ctip list <table_name> ["<sql_where_clause>"]

    save:   ./ctip save [-o <out_dir>] <table_name>

    *check:  ./ctip check [<session_id>]

    *clean:  ./ctip clean [<session_id>]

    *update: ./ctip update-status <job_id> <status>
            ./ctip update-id <job_id> <new_id>

    *log:    ./ctip log-start <job_id>
            ./ctip log-end <job_id>
"""

def main(argv):
    try:
        command = argv[1]

        if command == "run":
            ctip.run(argv[2:])
        elif command == "gen":
            ctip.gen(argv[2:])
        elif command == "tables":
            ctip.tables(argv[2:])
        elif command == "list":
            ctip.list(argv[2:])
        elif command == "save":
            ctip.save(argv[2:])
        elif command == "check":
            ctip.check(argv[2:])
        elif command == "clean":
            ctip.clean(argv[2:])
        elif command == "update-status":
            ctip.update_status(argv[2:])
        elif command == "update-id":
            ctip.update_id(argv[2:])
        elif command == "log-start":
            pass
        elif command == "log-end":
            pass
        else:
            raise CTIPError("No CTIP command named '" + command + "'.")

    except IndexError, RuntimeError:
        print(helpText)
        sys.exit(2)

    except CTIPError as e:
        print(e.msg)
        
if __name__ == "__main__":
    main(sys.argv)

